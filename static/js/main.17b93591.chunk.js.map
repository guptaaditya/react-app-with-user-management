{"version":3,"sources":["blocks/box/index.js","blocks/button/index.js","blocks/centercontainer/index.js","blocks/form/index.js","utils/helper.js","blocks/formField/index.js","blocks/input/index.js","blocks/view/index.js","blocks/sidebar/sidebar.js","blocks/sidebar/index.js","components/centercontainercard/index.js","utils/ui.js","components/loginforms/login.js","components/loginforms/signup.js","components/loginforms/forgotpassword.js","components/loginforms/verification.js","components/loginforms/resetpassword.js","modules/login/signin/login.js","modules/login/actiontypes.js","modules/login/actions.js","modules/redirect/actiontypes.js","modules/redirect/actions.js","modules/login/signin/index.js","modules/login/signup/signup.js","modules/login/signup/index.js","modules/login/forgotpassword/forgotpassword.js","modules/login/forgotpassword/index.js","modules/login/verification/verification.js","modules/login/verification/index.js","modules/login/resetpassword/resetpassword.js","modules/login/resetpassword/index.js","modules/dashboard/dashboard.js","modules/redirect/redirect.js","modules/redirect/index.js","modules/links/links.js","modules/links/index.js","components/sidebar/sidebar.js","blocks/appbody/index.js","modules/mainbody/mainbody.js","modules/mainbody/index.js","modules/router/privateroute.js","modules/router/index.js","modules/router/routes.js","modules/redirect/reducer.js","modules/router/actiontypes.js","modules/router/reducer.js","modules/login/reducer.js","app/reducers.js","modules/login/saga.js","modules/router/actions.js","modules/redirect/saga.js","app/sagas.js","app/index.js","app/store.js","serviceWorker.js","index.js"],"names":["Box","props","children","boxProps","Container","ButtonBlock","type","Checkbox","label","Button","ButtonGroup","groupProps","Group","ButtonOr","buttonOrProps","Or","CenterContainer","cols","Grid","columns","textAlign","style","height","verticalAlign","Column","width","FormBlock","formProps","Form","FormGroup","formGroupProps","storage","window","localStorage","tokenKey","ComponentWrapper","Component","additionalProps","remainingProps","ComponentProps","FormFieldWrapper","Field","FormInput","Input","InputBlock","iconType","inputProps","icon","View","viewProps","defaults","as","Menu","vertical","animation","inverted","visible","MenuItem","item","className","isImage","clickHandler","onClick","_","noop","Item","Image","centered","src","size","active","Icon","name","SidebarBlock","Sidebar","SidebarPushable","Pushable","Segment","SidebarPusher","Pusher","React","CollapsedSidebarMenu","Logo","logo","text","alt","MenuItems","menuItems","onItemClickToParents","map","index","key","e","state","collapsed","handleContractMenu","setState","handleExpandMenu","handleOnMouseover","clearTimeout","outTimer","handleOnMouseout","setTimeout","getLastMenuItem","expand","collapse","this","onItemClick","topMenuItems","reject","bottomMenuItems","filter","length","fixed","id","onMouseOver","onMouseOut","CenterContainerCard","centerContainerProps","iziToast","require","ToastFactory","init","toastSettings","timeout","resetOnHover","position","close","closeOnEscape","transitionIn","transitionOut","getToast","settings","showToast","view","sanitizedType","toLowerCase","typeMethod","indexOf","toastInfo","title","message","Login","isRememberActive","handleRememberClick","prevState","onRemember","handleLoginClick","input","getUserInput","validateUserInput","onLogin","username","document","getElementById","value","password","trim","onSignupClick","onForgotPasswordClick","onSubmit","isLine","placeholder","toggle","primary","defaultProps","Signup","handleSignupClick","onSignup","form","forms","firstname","querySelector","lastname","confirmpassword","onSigninClick","widths","fluid","ForgotPassword","handleForgotPasswordClick","onForgotPassword","useremail","onRedirect","Verification","handleVerificationCodeSubmitClick","onSubmitVerificationCode","verificationCode","onResendVerificationCode","emailAddress","ResetPassword","handleResetPasswordClick","onResetPasswordClick","handleRemember","remember","handleLogin","userInput","redirectTo","URLSearchParams","location","search","get","handleSignup","signupPath","handleForgotPassword","forgotpasswordPath","withRouter","ON_LOGIN","ON_SIGNUP","ON_FORGOT_PASSWORD","ON_FORGOT_PASSWORD_SUCCESS","ON_VERIFICATION_CODE_SUBMIT","ON_RESEND_VERIFICATION_CODE","ON_RESET_PASSWORD","onForgotPasswordSuccess","actionTypes","REDIRECT_TO","url","connect","dispatch","redirectUrl","actions","handleSignin","signinPath","VerificationCode","handleVerificationCodeSubmit","code","onVerificationCodeSubmit","handleResendVerificationCode","userManagement","resetPasswordForUserEmail","handleResetPassword","onResetPassword","Dashboard","RedirectTo","currentUrl","history","push","redirectToUrl","redirect","shouldRedirect","PureComponent","currentURL","Links","SidebarComponent","AppBody","MainApp","handleMenuClick","route","bottom","Mainbody","PrivateRoute","isAuthenticated","getIsAuthenticated","path","onRedirectToLogin","rest","auth","redirectBackTo","Routes","basename","exact","to","initialState","prevURL","ON_AUTHENTICATION_SUCCESS","token","combineReducers","action","actionypes","Promise","resolve","put","redirectActions","console","log","userInputs","takeLatest","sagaMiddleware","sagas","loginSagas","redirectSagas","store","createStore","combinedReducers","getItem","loadStateToken","compose","applyMiddleware","createTaleMiddleware","subscribe","getState","setItem","saga","run","initStore","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17b93591.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nexport function Box(props) {\r\n    const { children, ...boxProps } = props;\r\n    return (\r\n        <Container {...boxProps}>\r\n            {children}\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Button, Checkbox } from 'semantic-ui-react';\r\n\r\nexport function ButtonBlock(props) {\r\n    if (props.type === 'checkbox') {\r\n        return <Checkbox label={props.label} />\r\n    }\r\n    return (\r\n        <Button {...props}>\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport function ButtonGroup(props)  {\r\n    const { children, ...groupProps } = props;\r\n    return (\r\n        <Button.Group {...groupProps}>\r\n            {children}\r\n        </Button.Group>\r\n    );\r\n}\r\n\r\nexport function ButtonOr(props) {\r\n    const { children, ...buttonOrProps } = props;\r\n    return (\r\n        <Button.Or {...buttonOrProps}>\r\n            {children}\r\n        </Button.Or>\r\n    );\r\n}","import React from 'react';\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nexport function CenterContainer(props) {\r\n    const { cols = 6} = props;\r\n    return (\r\n        <Grid columns='equal' textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n            <Grid.Column width={cols}>\r\n                {props.children}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { Form } from 'semantic-ui-react';\r\n\r\nexport function FormBlock(props) {\r\n    const { children, ...formProps } = props;\r\n    return (\r\n        <Form {...formProps}>\r\n            {children}\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport function FormGroup(props) {\r\n    const { children, ...formGroupProps } = props;\r\n    return (\r\n        <Form.Group {...formGroupProps}>\r\n            {children}\r\n        </Form.Group>\r\n    )\r\n}","import React from 'react';\r\nconst storage = window.localStorage;\r\nconst tokenKey = 'utv.auth.hash';\r\n\r\nexport default function ComponentWrapper(Component, additionalProps = {}) {\r\n    return function(props) {\r\n        const { children, ...remainingProps } = props;\r\n        const ComponentProps = {\r\n            ...additionalProps,\r\n            ...remainingProps,\r\n        }\r\n        return (\r\n            <Component {...ComponentProps}>\r\n                {children}\r\n            </Component>\r\n        );\r\n    }\r\n}\r\n\r\nexport function loadStateToken() {\r\n    const token = storage.getItem(tokenKey);\r\n    if(token) {\r\n        return {\r\n            auth: {\r\n                isAuthenticated: true\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport function saveStateToken(state) {\r\n  storage.setItem(tokenKey, state.auth.token);\r\n}","import React from 'react';\r\nimport { Form } from 'semantic-ui-react';\r\nimport ComponentWrapper from 'utils/helper';\r\n\r\nexport const FormFieldWrapper = ComponentWrapper(Form.Field);\r\n\r\nexport const FormInput = ComponentWrapper(Form.Input);","import React from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\n\r\nexport function InputBlock(props) {\r\n    const { iconType, ...inputProps } = props;\r\n    return (\r\n        <Input icon={props.iconType} {...inputProps} />\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function View(props) {\r\n    const { children, ...viewProps } = props;\r\n    return (\r\n        <div {...viewProps}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { Sidebar, Segment, Menu, Icon, Image } from 'semantic-ui-react';\r\n\r\nimport ComponentWrapper from 'utils/helper';\r\n\r\nconst defaults = {\r\n    as: Menu,\r\n    vertical: true,\r\n    animation: 'overlay',\r\n    inverted: true,\r\n    visible: true,\r\n    width: 'thin',\r\n};\r\n\r\nfunction MenuItem(props) {\r\n    const { item, className = '' } = props;\r\n    const isImage = item.as === 'Image';\r\n    const clickHandler = item.onClick || _.noop;\r\n    if (isImage) {\r\n        return (\r\n            <Menu.Item className={className} onClick={clickHandler}>\r\n                <Image centered src={item.src} size='tiny' />\r\n            </Menu.Item>\r\n        );\r\n    }\r\n    return (\r\n        <Menu.Item className={className} active={item.active} onClick={clickHandler}>\r\n            {item.icon && <Icon name={item.icon} />}\r\n            {item.label}\r\n        </Menu.Item>\r\n    );\r\n}\r\n\r\n\r\nexport const SidebarBlock = ComponentWrapper(Sidebar, defaults);\r\nexport const SidebarPushable = ComponentWrapper(Sidebar.Pushable, { as: Segment });\r\nexport const SidebarPusher = ComponentWrapper(Sidebar.Pusher);\r\nexport class SidebarCombined extends React.Component {\r\n    render() {\r\n        const { visible: v, animation: a } = defaults;\r\n        const { \r\n            items, children, applicationContent, visible=v, animation=a,\r\n            onMenuClick, expanded\r\n        } = this.props;\r\n        const content = children || applicationContent;\r\n        const sidebarProps = {\r\n            visible,\r\n            animation,\r\n            onClick: onMenuClick\r\n        };\r\n        if (!expanded) {\r\n            return <CollapsedSidebarMenu {...sidebarProps} />\r\n        }\r\n        return (\r\n            <SidebarPushable>\r\n                <SidebarBlock {...sidebarProps}>\r\n                    {_.map(items, item => <MenuItem item={item} />)}\r\n                </SidebarBlock>\r\n                {content && (\r\n                    <SidebarPusher dimmed={visible}>\r\n                        <Segment basic>\r\n                            {content}\r\n                        </Segment>\r\n                    </SidebarPusher>\r\n                )}\r\n            </SidebarPushable>\r\n        );\r\n    }\r\n}\r\n\r\nfunction CollapsedSidebarMenu(props) {\r\n    return (\r\n        <SidebarPushable>\r\n            <SidebarBlock { ...{...props, width: 'very thin' } }>\r\n                <MenuItem className='bottom-sidebar-menu-item' item={{ icon: 'arrow alternate circle right' }} />)}\r\n            </SidebarBlock>\r\n        </SidebarPushable>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Container, Icon, Image, Menu } from \"semantic-ui-react\";\r\n\r\nfunction Logo(props) {\r\n  const {\r\n    logo: { src, text = \"\", className = \"\", onClick = _.noop } = {}\r\n  } = props;\r\n  if (src) {\r\n    return (\r\n      <Image\r\n        alt={text}\r\n        size=\"mini\"\r\n        src={src}\r\n        className={className}\r\n        onClick={onClick}\r\n      />\r\n    );\r\n  } else if (text) {\r\n    return (\r\n      <div className={className} onClick={onClick}>\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction MenuItems(props) {\r\n  const { menuItems = [], onClick: onItemClickToParents } = props;\r\n  return (\r\n    <>\r\n      {_.map(\r\n        menuItems,\r\n        (item, index) => {\r\n          const { as = \"a\", icon = \"\", label = \"\", onClick = _.noop } = item;\r\n          if (icon || label) {\r\n            return (\r\n              <Menu.Item as={as} key={index} onClick={e => {onClick(); onItemClickToParents(item)}} >\r\n                {icon && <Icon name={icon} />}\r\n                <span>{label}</span>\r\n              </Menu.Item>\r\n            );\r\n          }\r\n          return null;\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default class Sidebar extends React.Component {\r\n  state = {\r\n    collapsed: false\r\n  };\r\n\r\n  handleContractMenu = e => {\r\n    this.setState({ collapsed: true });\r\n  };\r\n\r\n  handleExpandMenu = e => {\r\n    this.setState({ collapsed: false });\r\n  };\r\n\r\n  handleOnMouseover = () => {\r\n    clearTimeout(this.outTimer);\r\n    this.handleExpandMenu();\r\n  };\r\n\r\n  handleOnMouseout = () => {\r\n    this.outTimer = setTimeout(this.handleContractMenu, 3000);\r\n  };\r\n\r\n  getLastMenuItem = () => {\r\n    const { collapsed } = this.state;\r\n    const expand = {\r\n      label: \"Expand\",\r\n      icon: \"expand\",\r\n      onClick: this.handleExpandMenu,\r\n    };\r\n    const collapse = {\r\n      label: \"Collapse\",\r\n      icon: \"compress\",\r\n      onClick: this.handleContractMenu,\r\n    };\r\n    return collapsed ? expand : collapse;\r\n  }\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    const { logo, menuItems = [], onItemClick = _.noop } = this.props;\r\n    const topMenuItems = _.reject(menuItems, \"bottom\");\r\n    let bottomMenuItems = _.filter(menuItems, \"bottom\") || [];\r\n    bottomMenuItems = [...bottomMenuItems, this.getLastMenuItem()];\r\n\r\n    if (topMenuItems && topMenuItems.length) {\r\n      return (\r\n        <Menu\r\n          icon=\"labeled\"\r\n          fixed=\"left\"\r\n          inverted\r\n          vertical\r\n          id=\"leftNavigationBar\"\r\n          onMouseOver={this.handleOnMouseover}\r\n          onMouseOut={this.handleOnMouseout}\r\n          className={collapsed ? \"collapsed\" : \"\"}\r\n        >\r\n          <Container className=\"top\">\r\n            {logo && (\r\n              <Menu.Item as=\"a\" className=\"logo\">\r\n                <Logo logo={logo} />\r\n              </Menu.Item>\r\n            )}\r\n            <MenuItems menuItems={topMenuItems} onClick={onItemClick} />\r\n          </Container>\r\n\r\n          {bottomMenuItems && (\r\n            <Container>\r\n              <MenuItems menuItems={bottomMenuItems} onClick={onItemClick} />\r\n            </Container>\r\n          )}\r\n        </Menu>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { CenterContainer } from 'blocks';\r\n\r\nexport function CenterContainerCard(props) {\r\n    const { children, ...centerContainerProps } = props;\r\n    return (\r\n        <CenterContainer {...centerContainerProps}>\r\n            {children}\r\n        </CenterContainer>\r\n    )\r\n}","const iziToast = require('izitoast');\r\n\r\nconst ToastFactory = (function () {\r\n    let init = false;\r\n    const toastSettings = {\r\n        timeout: 3000,\r\n        resetOnHover: true,\r\n        position: 'topRight',\r\n        close: true,\r\n        closeOnEscape: true,\r\n        transitionIn: 'flipInX',\r\n        transitionOut: 'flipOutX',\r\n    };\r\n    return {\r\n        getToast: function () {\r\n            if (!init) {\r\n                iziToast.settings(toastSettings);\r\n                init = true;\r\n            }\r\n            return iziToast;\r\n        }\r\n    };\r\n})();\r\n\r\nexport function showToast(view, type = '', settings = {}) {\r\n    const allowedTypes = ['success', 'info', 'error', 'warning'];\r\n    //type could be success, info, error, warning\r\n    /*\r\n        When view is a string, its a message without title,\r\n        When view is a object with title and message property use it as it is.\r\n    */\r\n    const sanitizedType = type.toLowerCase();\r\n    const typeMethod = allowedTypes.indexOf(sanitizedType) > -1 ? sanitizedType : 'show';\r\n    const toastInfo = {\r\n        title: view.title || '',\r\n        message: view.message || view || '',\r\n        ...settings,\r\n    };\r\n    ToastFactory.getToast()[typeMethod](toastInfo);\r\n};\r\n\r\nexport const onLogin = (props) => {\r\n    showToast('Message', 'success');\r\n    props.history.push('/next-url');\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { CenterContainerCard } from 'components/centercontainercard';\r\nimport { Input, Form, FormField, Box, Button, View } from 'blocks';\r\nimport { showToast } from 'utils/ui';\r\n\r\nexport default class Login extends React.Component {\r\n    state = {\r\n        isRememberActive: false,\r\n    };\r\n\r\n    handleRememberClick = () => {\r\n        this.setState(prevState => ({ isRememberActive: !prevState.isRememberActive }), () => {\r\n            const { onRemember } = this.props;\r\n            onRemember(this.state.isRememberActive);\r\n        });\r\n    }\r\n\r\n    handleLoginClick = () => {\r\n        const input = this.getUserInput();\r\n        if (this.validateUserInput(input)) {\r\n            this.props.onLogin(input);\r\n        }\r\n    }\r\n\r\n    getUserInput() {\r\n        const username = document.getElementById('username').value;\r\n        const password = document.getElementById('password').value;\r\n        return {\r\n            username,\r\n            password\r\n        };\r\n    }\r\n\r\n    validateUserInput({ username, password }) {\r\n        if (!username.trim()) {\r\n            showToast('Username cannot be empty', 'error');\r\n            return false;\r\n        } else if (!password.trim()) {\r\n            showToast('Password cannot be empty', 'error');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { isRememberActive } = this.state;\r\n        const { onSignupClick, onForgotPasswordClick } = this.props;\r\n        return (\r\n            <>\r\n                <CenterContainerCard cols={5}>\r\n                    <Box className='border-box'>\r\n                        <Form onSubmit={this.handleLoginClick}>\r\n                            <FormField isLine>\r\n                                Welcome back!\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='username'\r\n                                    type=\"text\" \r\n                                    placeholder=\"Email\" \r\n                                    iconType='user' \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='password'\r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                    iconType='lock' \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine className='text flexible-center-equidistant-cells'>\r\n                                <Button toggle active={isRememberActive} \r\n                                    onClick={this.handleRememberClick}>\r\n                                    Remember me\r\n                                </Button> \r\n                                <FormField isLine onClick={onForgotPasswordClick}>\r\n                                    <View className='inline link'>Forgot password?</View>\r\n                                </FormField>\r\n                            </FormField>\r\n                            <FormField className='flexible' isLine>\r\n                                <Button type='submit' className='cell no-margin' primary>\r\n                                    Login\r\n                                </Button> \r\n                            </FormField>\r\n                            <FormField isLine onClick={onSignupClick}>\r\n                                Or <View className='inline link'>register now!</View>\r\n                            </FormField>\r\n                        </Form>\r\n                    </Box>\r\n                </CenterContainerCard>\r\n            </>\r\n        );\r\n    }\r\n}\r\nLogin.defaultProps = {\r\n    onRemember: _.noop,\r\n    onSignupClick: _.noop,\r\n    onForgotPasswordClick: _.noop,\r\n    onLogin: _.noop,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { CenterContainerCard } from 'components/centercontainercard';\r\nimport { Input, Form, FormField, Box, Button, View, FormInput, FormGroup } from 'blocks';\r\nimport { showToast } from 'utils/ui';\r\n\r\nexport default class Signup extends React.Component {\r\n    handleSignupClick = () => {\r\n        const input = this.getUserInput();\r\n        if (this.validateUserInput(input)) {\r\n            this.props.onSignup(input);\r\n        }\r\n    }\r\n\r\n    getUserInput() {\r\n        const form = document.forms[0];\r\n        const firstname = form.querySelector('#firstName').value;\r\n        const lastname = form.querySelector('#lastName').value;\r\n        const username = form.querySelector('#username').value;\r\n        const confirmpassword = form.querySelector('#confirmpassword').value;\r\n        const password = form.querySelector('#password').value;\r\n        return {\r\n            username,\r\n            password,\r\n            confirmpassword,\r\n            firstname,\r\n            lastname\r\n        };\r\n    }\r\n\r\n    validateUserInput({ username, password, confirmpassword, firstname }) {\r\n        if (!firstname.trim()) {\r\n            showToast('Please enter your name', 'error');\r\n            return false;\r\n        } else if (!username.trim()) {\r\n            showToast('Username cannot be empty', 'error');\r\n            return false;\r\n        } else if (!password.trim()) {\r\n            showToast('Password cannot be empty', 'error');\r\n            return false;\r\n        } else if (!confirmpassword.trim()) {\r\n            showToast('Confirm password cannot be empty', 'error');\r\n            return false;\r\n        } else if (confirmpassword.trim() !== password.trim()) {\r\n            showToast('Password and Confirm password do not match', 'error');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { onSigninClick } = this.props;\r\n        return (\r\n            <>\r\n                <CenterContainerCard cols={6}>\r\n                    <Box className='border-box'>\r\n                        <Form>\r\n                            <FormField isLine>\r\n                                Creating an account is quick and easy!\r\n                            </FormField>\r\n                            <FormGroup widths='equal'>\r\n                                <FormInput \r\n                                    id='firstName'\r\n                                    fluid \r\n                                    placeholder='First name' \r\n                                />\r\n                                <FormInput \r\n                                    id='lastName'\r\n                                    fluid \r\n                                    placeholder='Last name' \r\n                                />\r\n                            </FormGroup>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='username'\r\n                                    type=\"text\" \r\n                                    placeholder=\"Email\" \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='password'\r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='confirmpassword'\r\n                                    type=\"password\" \r\n                                    placeholder=\"Confirm Password\" \r\n                                />\r\n                            </FormField>\r\n                            <FormField className='flexible' isLine>\r\n                                <Button className='cell' primary onClick={this.handleSignupClick}>\r\n                                    Register\r\n                                </Button> \r\n                            </FormField>\r\n                            <FormField isLine onClick={onSigninClick}>\r\n                                Or <View className='inline link'>Sign in.</View>\r\n                            </FormField>\r\n                        </Form>\r\n                    </Box>\r\n                </CenterContainerCard>\r\n            </>\r\n        );\r\n    }\r\n}\r\nSignup.defaultProps = {\r\n    onSignup: _.noop,\r\n    onSigninClick: _.noop,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport { showToast } from 'utils/ui';\r\n\r\nimport { CenterContainerCard } from 'components/centercontainercard';\r\nimport { Input, Form, FormField, Box, Button, ButtonGroup, ButtonOr } from 'blocks';\r\n\r\nexport default class ForgotPassword extends React.Component {\r\n    handleForgotPasswordClick = () => {\r\n        const input = this.getUserInput();\r\n        if (this.validateUserInput(input)) {\r\n            this.props.onForgotPassword(input);\r\n        }\r\n    }\r\n\r\n    getUserInput() {\r\n        const useremail = document.getElementById('useremail').value;\r\n        return {\r\n            useremail,\r\n        };\r\n    }\r\n\r\n    validateUserInput({ useremail }) {\r\n        if (!useremail.trim()) {\r\n            showToast('Please enter your Email', 'error');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { onSigninClick } = this.props;\r\n        return (\r\n            <>\r\n                <CenterContainerCard cols={6}>\r\n                    <Box className='border-box'>\r\n                        <Form>\r\n                            <FormField isLine>\r\n                                Please enter your registered email ID\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='useremail'\r\n                                    type=\"text\" \r\n                                    placeholder=\"Email\" \r\n                                    iconType='user' \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <ButtonGroup>\r\n                                    <Button onClick={onSigninClick}>To Sign in</Button>\r\n                                    <ButtonOr />\r\n                                    <Button primary onClick={this.handleForgotPasswordClick}>\r\n                                        Get Verification Code\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </FormField>\r\n                        </Form>\r\n                    </Box>\r\n                </CenterContainerCard>\r\n            </>\r\n        );\r\n    }\r\n}\r\nForgotPassword.defaultProps = {\r\n    onForgotPassword: _.noop,\r\n    onRedirect: _.noop,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { CenterContainerCard } from 'components/centercontainercard';\r\nimport { Input, Form, FormField, Box, Button, ButtonGroup, ButtonOr, View } from 'blocks';\r\nimport { showToast } from 'utils/ui';\r\n\r\nexport default class Verification extends React.Component {\r\n    handleVerificationCodeSubmitClick = () => {\r\n        const input = this.getUserInput();\r\n        if (this.validateUserInput(input)) {\r\n            this.props.onSubmitVerificationCode(input.verificationCode);\r\n        }\r\n    }\r\n\r\n    getUserInput() {\r\n        const verificationCode = document.getElementById('verificationCode').value;\r\n        return {\r\n            verificationCode,\r\n        };\r\n    }\r\n\r\n    validateUserInput({ verificationCode }) {\r\n        if (!verificationCode.trim()) {\r\n            showToast('Please enter the verification code', 'error');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { onResendVerificationCode, emailAddress, onSigninClick } = this.props;\r\n        return (\r\n            <>\r\n                <CenterContainerCard cols={6}>\r\n                    <Box className='border-box'>\r\n                        <Form>\r\n                            <FormField isLine>\r\n                                Please enter the verification code sent to <View className='inline link'>{emailAddress}</View>\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='verificationCode'\r\n                                    type=\"text\" \r\n                                    placeholder=\"Verification Code\" \r\n                                    iconType='user secret' \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <ButtonGroup>\r\n                                    <Button onClick={onResendVerificationCode}>Resend</Button>\r\n                                    <ButtonOr />\r\n                                    <Button primary onClick={this.handleVerificationCodeSubmitClick}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </FormField>\r\n                            <FormField isLine onClick={onSigninClick}>\r\n                                Or <View className='inline link'>Sign in.</View>\r\n                            </FormField>\r\n                        </Form>\r\n                    </Box>\r\n                </CenterContainerCard>\r\n            </>\r\n        );\r\n    }\r\n}\r\nVerification.propTypes = {\r\n    emailAddress: PropTypes.string.isRequired,\r\n};\r\nVerification.defaultProps = {\r\n    onResendVerificationCode: _.noop,\r\n    onSubmitVerificationCode: _.noop,\r\n    onSigninClick: _.noop,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { CenterContainerCard } from 'components/centercontainercard';\r\nimport { Input, Form, FormField, Box, Button, View } from 'blocks';\r\nimport { showToast } from 'utils/ui';\r\n\r\nexport default class ResetPassword extends React.Component {\r\n    handleResetPasswordClick = () => {\r\n        const input = this.getUserInput();\r\n        if (this.validateUserInput(input)) {\r\n            this.props.onResetPasswordClick(input);\r\n        }\r\n    }\r\n\r\n    getUserInput() {\r\n        const confirmpassword = document.getElementById('confirmpassword').value;\r\n        const password = document.getElementById('password').value;\r\n        return {\r\n            confirmpassword,\r\n            password\r\n        };\r\n    }\r\n\r\n    validateUserInput({ confirmpassword, password }) {\r\n        if (!password.trim()) {\r\n            showToast('Password cannot be empty', 'error');\r\n            return false;\r\n        } else if (!confirmpassword.trim()) {\r\n            showToast('Confirm password cannot be empty', 'error');\r\n            return false;\r\n        } else if (confirmpassword.trim() !== password.trim()) {\r\n            showToast('Password and Confirm password do not match', 'error');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { onSigninClick } = this.props;\r\n        return (\r\n            <>\r\n                <CenterContainerCard cols={5}>\r\n                    <Box className='border-box'>\r\n                        <Form>\r\n                            <FormField isLine>\r\n                                Please enter the new password\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='password'\r\n                                    type=\"password\" \r\n                                    placeholder=\"New Password\" \r\n                                    iconType='lock' \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='confirmpassword'\r\n                                    type=\"password\" \r\n                                    placeholder=\"Confirm New Password\" \r\n                                    iconType='lock' \r\n                                />\r\n                            </FormField>\r\n                            <FormField className='flexible' isLine>\r\n                                <Button className='cell no-margin' primary onClick={this.handleResetPasswordClick}>\r\n                                    Reset\r\n                                </Button> \r\n                            </FormField>\r\n                            <FormField isLine onClick={onSigninClick}>\r\n                                Or <View className='inline link'>Sign in!</View>\r\n                            </FormField>\r\n                        </Form>\r\n                    </Box>\r\n                </CenterContainerCard>\r\n            </>\r\n        );\r\n    }\r\n}\r\nResetPassword.defaultProps = {\r\n    onSigninClick: _.noop,\r\n    onResetPasswordClick: _.noop,\r\n};","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { LoginForm } from 'components/loginforms';\r\n\r\nclass Login extends React.Component {\r\n    handleRemember = (remember) => {\r\n\r\n    }\r\n\r\n    handleLogin = (userInput) => {\r\n        const { redirectTo, onLogin } = this.props;\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const redirectUrlFromSearch = query.get('redirectUrl');\r\n        onLogin(userInput, redirectUrlFromSearch || redirectTo);\r\n    }\r\n\r\n    handleSignup = () => this.props.onRedirect(this.props.signupPath)\r\n\r\n    handleForgotPassword = () => this.props.onRedirect(this.props.forgotpasswordPath)\r\n\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <LoginForm \r\n                    onLogin={this.handleLogin}\r\n                    onRemember={this.handleRemember} \r\n                    onSignupClick={this.handleSignup}\r\n                    onForgotPasswordClick={this.handleForgotPassword}\r\n                />\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default withRouter(Login);\r\nLogin.propTypes = {\r\n    signupPath: PropTypes.string.isRequired,\r\n    forgotpasswordPath: PropTypes.string.isRequired,\r\n};\r\nLogin.defaultProps = {\r\n    onLogin: _.noop,\r\n    onRedirect: _.noop,\r\n};","\r\nexport const ON_LOGIN = 'ON_LOGIN';\r\nexport const ON_LOGIN_SUCCESS = 'ON_LOGIN_SUCCESS';\r\nexport const ON_SIGNUP = 'ON_SIGNUP';\r\nexport const ON_FORGOT_PASSWORD = 'ON_FORGOT_PASSWORD';\r\nexport const ON_FORGOT_PASSWORD_SUCCESS = 'ON_FORGOT_PASSWORD_SUCCESS';\r\nexport const ON_VERIFICATION_CODE_SUBMIT = 'ON_VERIFICATION_CODE_SUBMIT';\r\nexport const ON_RESEND_VERIFICATION_CODE = 'ON_RESEND_VERIFICATION_CODE';\r\nexport const ON_RESET_PASSWORD = 'ON_RESET_PASSWORD';\r\n","import _ from 'lodash';\r\nimport * as actionTypes from './actiontypes';\r\n\r\nexport function onLogin({ username, password }, redirectUrl) {\r\n    return {\r\n        type: actionTypes.ON_LOGIN,\r\n        username,\r\n        password,\r\n        redirectUrl,\r\n    }\r\n}\r\n\r\nexport function onLoginSuccess() {\r\n    return {\r\n        type: actionTypes.ON_LOGIN_SUCCESS\r\n    }\r\n}\r\n\r\nexport function onSignup(userInput, redirectUrl) {\r\n    return {\r\n        type: actionTypes.ON_SIGNUP,\r\n        ...userInput,\r\n        redirectUrl,\r\n    }\r\n}\r\n\r\nexport function onSignupSuccess() {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport function onForgotPassword({ useremail }, redirectUrl) {\r\n    return {\r\n        type: actionTypes.ON_FORGOT_PASSWORD,\r\n        useremail,\r\n        redirectUrl,\r\n    }\r\n}\r\n\r\nexport function onForgotPasswordSuccess(useremail) {\r\n    return {\r\n        type: actionTypes.ON_FORGOT_PASSWORD_SUCCESS,\r\n        useremail\r\n    }\r\n}\r\n\r\nexport function onVerificatonCodeSubmit(code, redirectUrl) {\r\n    return {\r\n        type: actionTypes.ON_VERIFICATION_CODE_SUBMIT,\r\n        code,\r\n        redirectUrl,\r\n    }\r\n}\r\n\r\nexport function onResendVerificationCode(useremail) {\r\n    return {\r\n        type: actionTypes.ON_RESEND_VERIFICATION_CODE,\r\n        useremail\r\n    }\r\n}\r\n\r\nexport function onResetPassword(userInput, redirectUrl) {\r\n    return {\r\n        type: actionTypes.ON_RESET_PASSWORD,\r\n        ...userInput,\r\n        redirectUrl,\r\n    }\r\n}","export const REDIRECT_TO = 'REDIRECT_TO';\r\nexport const REDIRECT_TO_URL = 'REDIRECT_TO_URL'","import * as actionTypes from './actiontypes';\r\n\r\nexport function redirectTo(url) {\r\n    return {\r\n        type: actionTypes.REDIRECT_TO,\r\n        url,\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport Login from './login';\r\nimport * as actions from '../actions';\r\nimport { redirectTo } from 'modules/redirect/actions';\r\n\r\nexport default connect(\r\n    (state) => ({\r\n  \r\n    }),\r\n    (dispatch) => ({\r\n      onLogin: (userInput, redirectUrl) => dispatch(actions.onLogin(userInput, redirectUrl)),\r\n      onRedirect: (redirectUrl) => dispatch(redirectTo(redirectUrl)),\r\n    })\r\n)(Login);\r\n  ","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { SignupForm } from 'components/loginforms';\r\n\r\nclass Signup extends React.Component {\r\n    handleSignup = (userInput) => {\r\n        const { redirectTo, onSignup } = this.props;\r\n        onSignup(userInput, redirectTo);\r\n    }\r\n\r\n    handleSignin = () => this.props.onRedirect(this.props.signinPath)\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <SignupForm \r\n                    onSignup={this.handleSignup}\r\n                    onSigninClick={this.handleSignin}\r\n                />\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default withRouter(Signup);\r\nSignup.propTypes = {\r\n    signinPath: PropTypes.string.isRequired,\r\n};\r\nSignup.defaultProps = {\r\n    onSignup: _.noop,\r\n    onRedirect: _.noop,\r\n};","import { connect } from 'react-redux'\r\nimport Signup from './signup';\r\nimport * as actions from '../actions';\r\nimport { redirectTo } from 'modules/redirect/actions';\r\n\r\nexport default connect(\r\n    (state) => ({\r\n  \r\n    }),\r\n    (dispatch) => ({\r\n      onSignup: (userInput, redirectUrl) => dispatch(actions.onSignup(userInput, redirectUrl)),\r\n      onRedirect: (redirectUrl) => dispatch(redirectTo(redirectUrl)),\r\n    })\r\n)(Signup);\r\n  ","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { ForgotPasswordForm } from 'components/loginforms';\r\n\r\nclass ForgotPassword extends React.Component {\r\n    handleForgotPassword = (userInput) => {\r\n        const { redirectTo, onForgotPassword } = this.props;\r\n        onForgotPassword(userInput, redirectTo);\r\n    }\r\n\r\n    handleSignin = () => this.props.onRedirect(this.props.signinPath)\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <ForgotPasswordForm \r\n                    onForgotPassword={this.handleForgotPassword}\r\n                    onSigninClick={this.handleSignin}\r\n                />\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default withRouter(ForgotPassword);\r\nForgotPassword.propTypes = {\r\n    signinPath: PropTypes.string.isRequired,\r\n};\r\nForgotPassword.defaultProps = {\r\n    onForgotPassword: _.noop,\r\n    onRedirect: _.noop,\r\n};","import { connect } from 'react-redux'\r\nimport ForgotPassword from './forgotpassword';\r\nimport * as actions from '../actions';\r\nimport { redirectTo } from 'modules/redirect/actions';\r\n\r\nexport default connect(\r\n    (state) => ({\r\n      \r\n    }),\r\n    (dispatch) => ({\r\n      onForgotPassword: (userInput, redirectUrl) => {\r\n        return dispatch(actions.onForgotPassword(userInput, redirectUrl));\r\n      },\r\n      onRedirect: (redirectUrl) => dispatch(redirectTo(redirectUrl)),\r\n    })\r\n)(ForgotPassword);\r\n  ","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { VerificationCodeForm } from 'components/loginforms';\r\n\r\nclass VerificationCode extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (!this.props.emailAddress) this.handleSignin();\r\n    }\r\n\r\n    handleVerificationCodeSubmit = (code) => {\r\n        const { redirectTo, onVerificationCodeSubmit } = this.props;\r\n        onVerificationCodeSubmit(code, redirectTo);\r\n    }\r\n\r\n    handleResendVerificationCode = () => {\r\n        const { onResendVerificationCode, emailAddress } = this.props;\r\n        onResendVerificationCode(emailAddress);\r\n    }\r\n\r\n    handleSignin = () => this.props.onRedirect(this.props.signinPath)\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <VerificationCodeForm \r\n                    emailAddress={this.props.emailAddress}\r\n                    onResendVerificationCode={this.handleResendVerificationCode}\r\n                    onSubmitVerificationCode={this.handleVerificationCodeSubmit}\r\n                    onSigninClick={this.handleSignin}\r\n                />\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default withRouter(VerificationCode);\r\n\r\nVerificationCode.propTypes = {\r\n    signinPath: PropTypes.string.isRequired,\r\n    emailAddress: PropTypes.string.isRequired,\r\n};\r\nVerificationCode.defaultProps = {\r\n    onForgotPassword: _.noop,\r\n    onRedirect: _.noop,\r\n};","import { connect } from 'react-redux'\r\nimport Verification from './verification';\r\nimport * as actions from '../actions';\r\nimport { redirectTo } from 'modules/redirect/actions';\r\n\r\nexport default connect(\r\n    (state) => ({\r\n      emailAddress: state.userManagement.resetPasswordForUserEmail,\r\n    }),\r\n    (dispatch) => ({\r\n      onResendVerificationCode: (emailAddress) => {\r\n        return dispatch(actions.onResendVerificationCode(emailAddress));\r\n      },\r\n      onVerificationCodeSubmit: (code, redirectUrl) => {\r\n        return dispatch(actions.onVerificatonCodeSubmit(code, redirectUrl));\r\n      },\r\n      onRedirect: (redirectUrl) => dispatch(redirectTo(redirectUrl)),\r\n    })\r\n)(Verification);\r\n  ","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { ResetPasswordForm } from 'components/loginforms';\r\n\r\nclass ResetPassword extends React.Component {\r\n    handleResetPassword = (userInput) => {\r\n        const { redirectTo, onResetPassword } = this.props;\r\n        onResetPassword(userInput, redirectTo);\r\n    }\r\n\r\n    handleSignin = () => this.props.onRedirect(this.props.signinPath)\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <ResetPasswordForm \r\n                    onResetPasswordClick={this.handleResetPassword}\r\n                    onSigninClick={this.handleSignin}\r\n                />\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default withRouter(ResetPassword);\r\n\r\nResetPassword.propTypes = {\r\n    signinPath: PropTypes.string.isRequired,\r\n};\r\nResetPassword.defaultProps = {\r\n    onResetPassword: _.noop,\r\n    onRedirect: _.noop,\r\n};","import { connect } from 'react-redux'\r\nimport ResetPassword from './resetpassword';\r\nimport * as actions from '../actions';\r\nimport { redirectTo } from 'modules/redirect/actions';\r\n\r\nexport default connect(\r\n    null,\r\n    (dispatch) => ({\r\n        onResetPassword: (userInput, redirectUrl) => {\r\n            return dispatch(actions.onResetPassword(userInput, redirectUrl));\r\n        },\r\n        onRedirect: (redirectUrl) => dispatch(redirectTo(redirectUrl)),\r\n    })\r\n)(ResetPassword);\r\n  ","import React from 'react';\r\n\r\nexport default class Dashboard extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                \r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\n\r\nclass RedirectTo extends React.PureComponent {\r\n    state = {\r\n        currentUrl: '',\r\n    }\r\n\r\n    redirect() {\r\n        this.props.history.push(this.state.currentUrl);\r\n    }\r\n\r\n    shouldRedirect() {\r\n        if (this.props.redirectToUrl !== this.state.currentUrl) {\r\n            this.setState({ currentUrl: this.props.redirectToUrl }, this.redirect);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.shouldRedirect();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.shouldRedirect();\r\n    }\r\n    \r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withRouter(RedirectTo);\r\n","import { connect } from 'react-redux';\r\nimport RedirectTo from './redirect';\r\n\r\nexport default connect(state => ({\r\n    redirectToUrl: state.redirect.currentURL,\r\n}))(RedirectTo)","import React from 'react';\r\n\r\nexport default class Links extends React.Component {\r\n    render() {\r\n        return null;\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport Links from './links';\r\n\r\nexport default connect(null, () => {\r\n\r\n})(Links);","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport { Sidebar } from \"blocks\";\r\nimport \"styles/sidebar.scss\";\r\n\r\nexport default class SidebarComponent extends React.Component {\r\n  render() {\r\n    const { menuItems, logo, onItemClick = _.noop } = this.props;\r\n\r\n    return (\r\n      <Sidebar logo={logo} menuItems={menuItems} onItemClick={onItemClick} />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default class AppBody extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app-body\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Sidebar from 'components/sidebar';\r\nimport AppBody from 'blocks/appbody';\r\n\r\n\r\nconst logo = { src: \"https://react.semantic-ui.com/logo.png\" };\r\n\r\nexport default class MainApp extends React.Component {\r\n    handleMenuClick = item => {\r\n        if (item.route) {\r\n            const { onRedirect } =  this.props;\r\n            onRedirect(item.route);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const menuItems = [{\r\n              label: \"Dashboard\", icon: \"dashboard\", route: \"/dashboard\",\r\n            }, {\r\n              label: \"Links\", icon: \"linkify\", route: \"/links\",\r\n            }, {\r\n              label: \"Overlays\", icon: \"affiliatetheme\", route: \"/overlays\",\r\n            }, {\r\n              bottom: true, label: \"Profile\", icon: \"user outline\", route: \"/user-profile\",\r\n            }, {\r\n              bottom: true, label: \"Signout\", icon: \"power off\", route: \"/logout\",\r\n        }];\r\n          \r\n        return (\r\n            <>\r\n                <Sidebar logo={logo} menuItems={menuItems} onItemClick={this.handleMenuClick} />\r\n                <AppBody>\r\n                    {this.props.children}\r\n                </AppBody>\r\n            </>\r\n        );\r\n\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport Mainbody from './mainbody';\r\nimport { redirectTo } from 'modules/redirect/actions';\r\n\r\nexport default connect(\r\n    null,\r\n    (dispatch) => ({\r\n      onRedirect: (redirectUrl) => dispatch(redirectTo(redirectUrl)),\r\n    })\r\n)(Mainbody);\r\n  ","import React from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport MainBody from 'modules/mainbody';\r\n\r\nexport class PrivateRoute extends React.Component {\r\n    state = {\r\n      isAuthenticated: false, \r\n    };\r\n\r\n    componentDidMount() {\r\n      const { path, isAuthenticated, onRedirectToLogin } = this.props;\r\n      if (!isAuthenticated) {\r\n        onRedirectToLogin(path);\r\n      }\r\n    }\r\n\r\n    getIsAuthenticated = () => {\r\n      return true;\r\n    }\r\n\r\n    render() {\r\n      const { isAuthenticated, children, ...rest } = this.props;\r\n\r\n      if (!isAuthenticated) return null;\r\n      return (\r\n          <Route {...rest}>\r\n            <MainBody>\r\n              {children}\r\n            </MainBody>\r\n          </Route>\r\n      );\r\n    }\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  onGetAuthenticated: PropTypes.bool,\r\n};\r\n\r\nPrivateRoute.defaultProps = {\r\n  onRedirectToLogin: _.noop,\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { PrivateRoute } from './privateroute';\r\nimport { redirectTo } from 'modules/redirect/actions';\r\n\r\nexport default connect(\r\n  state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  }),\r\n  dispatch => ({\r\n    onRedirectToLogin: (redirectBackTo) => dispatch(redirectTo(`/login?redirectUrl=${redirectBackTo}`))\r\n  })\r\n)(PrivateRoute);","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { \r\n  Login, Signup, ForgotPassword, Verification, RedirectTo, Dashboard, ResetPassword ,\r\n  Links\r\n} from 'modules';\r\nimport Sidebar from 'components/sidebar';\r\nimport PrivateRoute from './index';\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Router basename='/advertise-overlays'>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/dashboard\" />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login redirectTo='/dashboard' signupPath='/signup' forgotpasswordPath='/forgot-password' />\r\n          </Route>\r\n          <Route exact path=\"/signup\">\r\n            <Signup redirectTo='/dashboard' signinPath='/login' />\r\n          </Route>\r\n          <Route exact path=\"/forgot-password\">\r\n            <ForgotPassword redirectTo='/verification' signinPath='/login' />\r\n          </Route>\r\n          <Route exact path=\"/verification\">\r\n            <Verification redirectTo='/reset-password' signinPath='/login' />\r\n          </Route>\r\n          <Route exact path=\"/reset-password\">\r\n            <ResetPassword redirectTo='/login' signinPath='/login' />\r\n          </Route>\r\n          <PrivateRoute exact path='/dashboard'>\r\n              <Dashboard />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/links'>\r\n              <Links />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/overlays'>\r\n              <Dashboard />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/user-profile'>\r\n              <Links />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/logout'>\r\n              <Links />\r\n          </PrivateRoute>\r\n        </Switch>\r\n        <RedirectTo />\r\n    </Router>\r\n  );\r\n}","import _ from 'lodash';\r\nimport * as actionypes from './actiontypes';\r\n\r\nconst initialState = {\r\n    currentURL: '',\r\n    prevURL: ''\r\n};\r\n\r\nexport default function redirectTo(state = initialState, action) {\r\n    switch(action.type) {\r\n        case actionypes.REDIRECT_TO:\r\n            return {\r\n                prevURL: state.currentURL,\r\n                currentURL: action.url\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n}","export const ON_AUTHENTICATION_SUCCESS = 'ON_AUTHENTICATION_SUCCESS';","import _ from 'lodash';\r\nimport * as actionypes from './actiontypes';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    token: ''\r\n};\r\n\r\nexport default function auth(state = initialState, action) {\r\n    switch(action.type) {\r\n        case actionypes.ON_AUTHENTICATION_SUCCESS:\r\n            return {\r\n                isAuthenticated: true,\r\n                token: 'xyz',\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n}","import _ from 'lodash';\r\nimport * as actionypes from './actiontypes';\r\n\r\nconst initialState = {\r\n    resetPasswordForUserEmail: '',\r\n};\r\n\r\nexport default function userManagement(state = initialState, action) {\r\n    switch(action.type) {\r\n        case actionypes.ON_FORGOT_PASSWORD_SUCCESS:\r\n            return {\r\n                resetPasswordForUserEmail: action.useremail,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport redirect from 'modules/redirect/reducer';\r\nimport auth from 'modules/router/reducer';\r\nimport userManagement from 'modules/login/reducer';\r\n\r\nexport default combineReducers({\r\n  redirect,\r\n  auth,\r\n  userManagement,\r\n})","import { takeLatest, put } from 'redux-tale/es/effects';\r\nimport * as redirectActions from 'modules/redirect/actions';\r\nimport * as authActions from 'modules/router/actions';\r\nimport * as actionTypes from './actiontypes';\r\nimport * as actions from './actions';\r\nimport { showToast } from 'utils/ui';\r\n\r\nfunction* onLogin({ username, password, redirectUrl }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        yield put(authActions.onLoginSuccess());\r\n        yield put(redirectActions.redirectTo(redirectUrl));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* onSignup({ redirectUrl, ...userInputs }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        yield onLogin({ ...userInputs, redirectUrl });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* onForgotPassword({ redirectUrl, useremail }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        yield put(actions.onForgotPasswordSuccess(useremail));\r\n        showToast(`A Verification code has been sent to ${useremail}.`, 'success');\r\n        yield put(redirectActions.redirectTo(redirectUrl));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* onResendVerificationCode({ useremail }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        showToast(`Verification code resent to ${useremail}`, 'success');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* onVerificationCodeSubmit({ code, redirectUrl }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        yield put(redirectActions.redirectTo(redirectUrl));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* onResetPassword({ redirectUrl, ...userInputs }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        // yield put(authActions.onResetPasswordSuccess());\r\n        yield put(redirectActions.redirectTo(redirectUrl));\r\n        showToast(`Your password has been changed successfully.`, 'success');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst onLoginSaga = takeLatest(actionTypes.ON_LOGIN, onLogin);\r\nconst onSignupSaga = takeLatest(actionTypes.ON_SIGNUP, onSignup);\r\nconst onForgotPasswordSaga = takeLatest(actionTypes.ON_FORGOT_PASSWORD, onForgotPassword);\r\nconst onResendVerificationCodeSaga = takeLatest(actionTypes.ON_RESEND_VERIFICATION_CODE, onResendVerificationCode);\r\nconst onVerificationCodeSubmitSaga = takeLatest(actionTypes.ON_VERIFICATION_CODE_SUBMIT, onVerificationCodeSubmit);\r\nconst onResetPasswordSaga = takeLatest(actionTypes.ON_RESET_PASSWORD, onResetPassword);\r\n\r\nexport default [\r\n    onLoginSaga,\r\n    onSignupSaga,\r\n    onForgotPasswordSaga,\r\n    onResendVerificationCodeSaga,\r\n    onVerificationCodeSubmitSaga,\r\n    onResetPasswordSaga\r\n];","import * as actionTypes from './actiontypes';\r\n\r\nexport function onLoginSuccess() {\r\n    return {\r\n        type: actionTypes.ON_AUTHENTICATION_SUCCESS\r\n    }\r\n}","import * as actions from './actions';\r\nimport * as actionTypes from './actiontypes';\r\nimport { takeLatest } from 'redux-tale/es/effects';\r\n\r\nfunction onRedirect({ url }) {\r\n    actions.redirectTo(url);\r\n}\r\n\r\nconst onRedirectSaga = takeLatest(actionTypes.REDIRECT_TO_URL, onRedirect);\r\n\r\nexport default [\r\n    onRedirectSaga,\r\n];","import createTaleMiddleware from 'redux-tale/es/';\r\n\r\nimport loginSagas from 'modules/login/saga';\r\nimport redirectSagas from 'modules/redirect/saga';\r\n\r\nlet sagaMiddleware;\r\n\r\nconst sagas = [\r\n    ...loginSagas,\r\n    ...redirectSagas,\r\n];\r\n\r\nexport function createSagaMiddleWare() {\r\n    sagaMiddleware = createTaleMiddleware();\r\n    return sagaMiddleware;\r\n}\r\n\r\nexport function runSagas() {\r\n    sagas.map(saga => sagaMiddleware.run(saga));\r\n}","import React from 'react';\r\nimport { Routes } from 'modules';\r\nimport { Provider } from 'react-redux';\r\nimport initStore from './store.js';\r\n\r\nconst store = initStore();\r\n\r\nfunction App() {\r\n  return (\r\n      <Provider store={store}>\r\n        <Routes />\r\n      </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport combinedReducers from './reducers';\r\nimport { createSagaMiddleWare, runSagas } from './sagas';\r\nimport { loadStateToken, saveStateToken} from 'utils/helper';\r\n\r\nexport default function initStore() {\r\n    const store = createStore(\r\n        combinedReducers,\r\n        loadStateToken(),\r\n        compose(\r\n            applyMiddleware(createSagaMiddleWare())\r\n        )\r\n    );\r\n    store.subscribe(() => saveStateToken(store.getState()));\r\n    runSagas();\r\n    return store;\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'app';\r\nimport 'styles/index.scss';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}